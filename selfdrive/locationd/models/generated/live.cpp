#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6205070406300130898) {
   out_6205070406300130898[0] = 0;
   out_6205070406300130898[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6205070406300130898[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6205070406300130898[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6205070406300130898[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6205070406300130898[5] = -sin(in_vec[1]);
   out_6205070406300130898[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6205070406300130898[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6205070406300130898[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6205070406300130898[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6205070406300130898[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6205070406300130898[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6205070406300130898[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6205070406300130898[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6205070406300130898[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6205070406300130898[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6205070406300130898[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6205070406300130898[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5957469220389869935) {
   out_5957469220389869935[0] = delta_x[0] + nom_x[0];
   out_5957469220389869935[1] = delta_x[1] + nom_x[1];
   out_5957469220389869935[2] = delta_x[2] + nom_x[2];
   out_5957469220389869935[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5957469220389869935[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5957469220389869935[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5957469220389869935[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5957469220389869935[7] = delta_x[6] + nom_x[7];
   out_5957469220389869935[8] = delta_x[7] + nom_x[8];
   out_5957469220389869935[9] = delta_x[8] + nom_x[9];
   out_5957469220389869935[10] = delta_x[9] + nom_x[10];
   out_5957469220389869935[11] = delta_x[10] + nom_x[11];
   out_5957469220389869935[12] = delta_x[11] + nom_x[12];
   out_5957469220389869935[13] = delta_x[12] + nom_x[13];
   out_5957469220389869935[14] = delta_x[13] + nom_x[14];
   out_5957469220389869935[15] = delta_x[14] + nom_x[15];
   out_5957469220389869935[16] = delta_x[15] + nom_x[16];
   out_5957469220389869935[17] = delta_x[16] + nom_x[17];
   out_5957469220389869935[18] = delta_x[17] + nom_x[18];
   out_5957469220389869935[19] = delta_x[18] + nom_x[19];
   out_5957469220389869935[20] = delta_x[19] + nom_x[20];
   out_5957469220389869935[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_299340672292740379) {
   out_299340672292740379[0] = -nom_x[0] + true_x[0];
   out_299340672292740379[1] = -nom_x[1] + true_x[1];
   out_299340672292740379[2] = -nom_x[2] + true_x[2];
   out_299340672292740379[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_299340672292740379[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_299340672292740379[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_299340672292740379[6] = -nom_x[7] + true_x[7];
   out_299340672292740379[7] = -nom_x[8] + true_x[8];
   out_299340672292740379[8] = -nom_x[9] + true_x[9];
   out_299340672292740379[9] = -nom_x[10] + true_x[10];
   out_299340672292740379[10] = -nom_x[11] + true_x[11];
   out_299340672292740379[11] = -nom_x[12] + true_x[12];
   out_299340672292740379[12] = -nom_x[13] + true_x[13];
   out_299340672292740379[13] = -nom_x[14] + true_x[14];
   out_299340672292740379[14] = -nom_x[15] + true_x[15];
   out_299340672292740379[15] = -nom_x[16] + true_x[16];
   out_299340672292740379[16] = -nom_x[17] + true_x[17];
   out_299340672292740379[17] = -nom_x[18] + true_x[18];
   out_299340672292740379[18] = -nom_x[19] + true_x[19];
   out_299340672292740379[19] = -nom_x[20] + true_x[20];
   out_299340672292740379[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1430967006122356882) {
   out_1430967006122356882[0] = 1.0;
   out_1430967006122356882[1] = 0;
   out_1430967006122356882[2] = 0;
   out_1430967006122356882[3] = 0;
   out_1430967006122356882[4] = 0;
   out_1430967006122356882[5] = 0;
   out_1430967006122356882[6] = 0;
   out_1430967006122356882[7] = 0;
   out_1430967006122356882[8] = 0;
   out_1430967006122356882[9] = 0;
   out_1430967006122356882[10] = 0;
   out_1430967006122356882[11] = 0;
   out_1430967006122356882[12] = 0;
   out_1430967006122356882[13] = 0;
   out_1430967006122356882[14] = 0;
   out_1430967006122356882[15] = 0;
   out_1430967006122356882[16] = 0;
   out_1430967006122356882[17] = 0;
   out_1430967006122356882[18] = 0;
   out_1430967006122356882[19] = 0;
   out_1430967006122356882[20] = 0;
   out_1430967006122356882[21] = 0;
   out_1430967006122356882[22] = 1.0;
   out_1430967006122356882[23] = 0;
   out_1430967006122356882[24] = 0;
   out_1430967006122356882[25] = 0;
   out_1430967006122356882[26] = 0;
   out_1430967006122356882[27] = 0;
   out_1430967006122356882[28] = 0;
   out_1430967006122356882[29] = 0;
   out_1430967006122356882[30] = 0;
   out_1430967006122356882[31] = 0;
   out_1430967006122356882[32] = 0;
   out_1430967006122356882[33] = 0;
   out_1430967006122356882[34] = 0;
   out_1430967006122356882[35] = 0;
   out_1430967006122356882[36] = 0;
   out_1430967006122356882[37] = 0;
   out_1430967006122356882[38] = 0;
   out_1430967006122356882[39] = 0;
   out_1430967006122356882[40] = 0;
   out_1430967006122356882[41] = 0;
   out_1430967006122356882[42] = 0;
   out_1430967006122356882[43] = 0;
   out_1430967006122356882[44] = 1.0;
   out_1430967006122356882[45] = 0;
   out_1430967006122356882[46] = 0;
   out_1430967006122356882[47] = 0;
   out_1430967006122356882[48] = 0;
   out_1430967006122356882[49] = 0;
   out_1430967006122356882[50] = 0;
   out_1430967006122356882[51] = 0;
   out_1430967006122356882[52] = 0;
   out_1430967006122356882[53] = 0;
   out_1430967006122356882[54] = 0;
   out_1430967006122356882[55] = 0;
   out_1430967006122356882[56] = 0;
   out_1430967006122356882[57] = 0;
   out_1430967006122356882[58] = 0;
   out_1430967006122356882[59] = 0;
   out_1430967006122356882[60] = 0;
   out_1430967006122356882[61] = 0;
   out_1430967006122356882[62] = 0;
   out_1430967006122356882[63] = 0;
   out_1430967006122356882[64] = 0;
   out_1430967006122356882[65] = 0;
   out_1430967006122356882[66] = -0.5*state[4];
   out_1430967006122356882[67] = -0.5*state[5];
   out_1430967006122356882[68] = -0.5*state[6];
   out_1430967006122356882[69] = 0;
   out_1430967006122356882[70] = 0;
   out_1430967006122356882[71] = 0;
   out_1430967006122356882[72] = 0;
   out_1430967006122356882[73] = 0;
   out_1430967006122356882[74] = 0;
   out_1430967006122356882[75] = 0;
   out_1430967006122356882[76] = 0;
   out_1430967006122356882[77] = 0;
   out_1430967006122356882[78] = 0;
   out_1430967006122356882[79] = 0;
   out_1430967006122356882[80] = 0;
   out_1430967006122356882[81] = 0;
   out_1430967006122356882[82] = 0;
   out_1430967006122356882[83] = 0;
   out_1430967006122356882[84] = 0;
   out_1430967006122356882[85] = 0;
   out_1430967006122356882[86] = 0;
   out_1430967006122356882[87] = 0.5*state[3];
   out_1430967006122356882[88] = 0.5*state[6];
   out_1430967006122356882[89] = -0.5*state[5];
   out_1430967006122356882[90] = 0;
   out_1430967006122356882[91] = 0;
   out_1430967006122356882[92] = 0;
   out_1430967006122356882[93] = 0;
   out_1430967006122356882[94] = 0;
   out_1430967006122356882[95] = 0;
   out_1430967006122356882[96] = 0;
   out_1430967006122356882[97] = 0;
   out_1430967006122356882[98] = 0;
   out_1430967006122356882[99] = 0;
   out_1430967006122356882[100] = 0;
   out_1430967006122356882[101] = 0;
   out_1430967006122356882[102] = 0;
   out_1430967006122356882[103] = 0;
   out_1430967006122356882[104] = 0;
   out_1430967006122356882[105] = 0;
   out_1430967006122356882[106] = 0;
   out_1430967006122356882[107] = 0;
   out_1430967006122356882[108] = -0.5*state[6];
   out_1430967006122356882[109] = 0.5*state[3];
   out_1430967006122356882[110] = 0.5*state[4];
   out_1430967006122356882[111] = 0;
   out_1430967006122356882[112] = 0;
   out_1430967006122356882[113] = 0;
   out_1430967006122356882[114] = 0;
   out_1430967006122356882[115] = 0;
   out_1430967006122356882[116] = 0;
   out_1430967006122356882[117] = 0;
   out_1430967006122356882[118] = 0;
   out_1430967006122356882[119] = 0;
   out_1430967006122356882[120] = 0;
   out_1430967006122356882[121] = 0;
   out_1430967006122356882[122] = 0;
   out_1430967006122356882[123] = 0;
   out_1430967006122356882[124] = 0;
   out_1430967006122356882[125] = 0;
   out_1430967006122356882[126] = 0;
   out_1430967006122356882[127] = 0;
   out_1430967006122356882[128] = 0;
   out_1430967006122356882[129] = 0.5*state[5];
   out_1430967006122356882[130] = -0.5*state[4];
   out_1430967006122356882[131] = 0.5*state[3];
   out_1430967006122356882[132] = 0;
   out_1430967006122356882[133] = 0;
   out_1430967006122356882[134] = 0;
   out_1430967006122356882[135] = 0;
   out_1430967006122356882[136] = 0;
   out_1430967006122356882[137] = 0;
   out_1430967006122356882[138] = 0;
   out_1430967006122356882[139] = 0;
   out_1430967006122356882[140] = 0;
   out_1430967006122356882[141] = 0;
   out_1430967006122356882[142] = 0;
   out_1430967006122356882[143] = 0;
   out_1430967006122356882[144] = 0;
   out_1430967006122356882[145] = 0;
   out_1430967006122356882[146] = 0;
   out_1430967006122356882[147] = 0;
   out_1430967006122356882[148] = 0;
   out_1430967006122356882[149] = 0;
   out_1430967006122356882[150] = 0;
   out_1430967006122356882[151] = 0;
   out_1430967006122356882[152] = 0;
   out_1430967006122356882[153] = 1.0;
   out_1430967006122356882[154] = 0;
   out_1430967006122356882[155] = 0;
   out_1430967006122356882[156] = 0;
   out_1430967006122356882[157] = 0;
   out_1430967006122356882[158] = 0;
   out_1430967006122356882[159] = 0;
   out_1430967006122356882[160] = 0;
   out_1430967006122356882[161] = 0;
   out_1430967006122356882[162] = 0;
   out_1430967006122356882[163] = 0;
   out_1430967006122356882[164] = 0;
   out_1430967006122356882[165] = 0;
   out_1430967006122356882[166] = 0;
   out_1430967006122356882[167] = 0;
   out_1430967006122356882[168] = 0;
   out_1430967006122356882[169] = 0;
   out_1430967006122356882[170] = 0;
   out_1430967006122356882[171] = 0;
   out_1430967006122356882[172] = 0;
   out_1430967006122356882[173] = 0;
   out_1430967006122356882[174] = 0;
   out_1430967006122356882[175] = 1.0;
   out_1430967006122356882[176] = 0;
   out_1430967006122356882[177] = 0;
   out_1430967006122356882[178] = 0;
   out_1430967006122356882[179] = 0;
   out_1430967006122356882[180] = 0;
   out_1430967006122356882[181] = 0;
   out_1430967006122356882[182] = 0;
   out_1430967006122356882[183] = 0;
   out_1430967006122356882[184] = 0;
   out_1430967006122356882[185] = 0;
   out_1430967006122356882[186] = 0;
   out_1430967006122356882[187] = 0;
   out_1430967006122356882[188] = 0;
   out_1430967006122356882[189] = 0;
   out_1430967006122356882[190] = 0;
   out_1430967006122356882[191] = 0;
   out_1430967006122356882[192] = 0;
   out_1430967006122356882[193] = 0;
   out_1430967006122356882[194] = 0;
   out_1430967006122356882[195] = 0;
   out_1430967006122356882[196] = 0;
   out_1430967006122356882[197] = 1.0;
   out_1430967006122356882[198] = 0;
   out_1430967006122356882[199] = 0;
   out_1430967006122356882[200] = 0;
   out_1430967006122356882[201] = 0;
   out_1430967006122356882[202] = 0;
   out_1430967006122356882[203] = 0;
   out_1430967006122356882[204] = 0;
   out_1430967006122356882[205] = 0;
   out_1430967006122356882[206] = 0;
   out_1430967006122356882[207] = 0;
   out_1430967006122356882[208] = 0;
   out_1430967006122356882[209] = 0;
   out_1430967006122356882[210] = 0;
   out_1430967006122356882[211] = 0;
   out_1430967006122356882[212] = 0;
   out_1430967006122356882[213] = 0;
   out_1430967006122356882[214] = 0;
   out_1430967006122356882[215] = 0;
   out_1430967006122356882[216] = 0;
   out_1430967006122356882[217] = 0;
   out_1430967006122356882[218] = 0;
   out_1430967006122356882[219] = 1.0;
   out_1430967006122356882[220] = 0;
   out_1430967006122356882[221] = 0;
   out_1430967006122356882[222] = 0;
   out_1430967006122356882[223] = 0;
   out_1430967006122356882[224] = 0;
   out_1430967006122356882[225] = 0;
   out_1430967006122356882[226] = 0;
   out_1430967006122356882[227] = 0;
   out_1430967006122356882[228] = 0;
   out_1430967006122356882[229] = 0;
   out_1430967006122356882[230] = 0;
   out_1430967006122356882[231] = 0;
   out_1430967006122356882[232] = 0;
   out_1430967006122356882[233] = 0;
   out_1430967006122356882[234] = 0;
   out_1430967006122356882[235] = 0;
   out_1430967006122356882[236] = 0;
   out_1430967006122356882[237] = 0;
   out_1430967006122356882[238] = 0;
   out_1430967006122356882[239] = 0;
   out_1430967006122356882[240] = 0;
   out_1430967006122356882[241] = 1.0;
   out_1430967006122356882[242] = 0;
   out_1430967006122356882[243] = 0;
   out_1430967006122356882[244] = 0;
   out_1430967006122356882[245] = 0;
   out_1430967006122356882[246] = 0;
   out_1430967006122356882[247] = 0;
   out_1430967006122356882[248] = 0;
   out_1430967006122356882[249] = 0;
   out_1430967006122356882[250] = 0;
   out_1430967006122356882[251] = 0;
   out_1430967006122356882[252] = 0;
   out_1430967006122356882[253] = 0;
   out_1430967006122356882[254] = 0;
   out_1430967006122356882[255] = 0;
   out_1430967006122356882[256] = 0;
   out_1430967006122356882[257] = 0;
   out_1430967006122356882[258] = 0;
   out_1430967006122356882[259] = 0;
   out_1430967006122356882[260] = 0;
   out_1430967006122356882[261] = 0;
   out_1430967006122356882[262] = 0;
   out_1430967006122356882[263] = 1.0;
   out_1430967006122356882[264] = 0;
   out_1430967006122356882[265] = 0;
   out_1430967006122356882[266] = 0;
   out_1430967006122356882[267] = 0;
   out_1430967006122356882[268] = 0;
   out_1430967006122356882[269] = 0;
   out_1430967006122356882[270] = 0;
   out_1430967006122356882[271] = 0;
   out_1430967006122356882[272] = 0;
   out_1430967006122356882[273] = 0;
   out_1430967006122356882[274] = 0;
   out_1430967006122356882[275] = 0;
   out_1430967006122356882[276] = 0;
   out_1430967006122356882[277] = 0;
   out_1430967006122356882[278] = 0;
   out_1430967006122356882[279] = 0;
   out_1430967006122356882[280] = 0;
   out_1430967006122356882[281] = 0;
   out_1430967006122356882[282] = 0;
   out_1430967006122356882[283] = 0;
   out_1430967006122356882[284] = 0;
   out_1430967006122356882[285] = 1.0;
   out_1430967006122356882[286] = 0;
   out_1430967006122356882[287] = 0;
   out_1430967006122356882[288] = 0;
   out_1430967006122356882[289] = 0;
   out_1430967006122356882[290] = 0;
   out_1430967006122356882[291] = 0;
   out_1430967006122356882[292] = 0;
   out_1430967006122356882[293] = 0;
   out_1430967006122356882[294] = 0;
   out_1430967006122356882[295] = 0;
   out_1430967006122356882[296] = 0;
   out_1430967006122356882[297] = 0;
   out_1430967006122356882[298] = 0;
   out_1430967006122356882[299] = 0;
   out_1430967006122356882[300] = 0;
   out_1430967006122356882[301] = 0;
   out_1430967006122356882[302] = 0;
   out_1430967006122356882[303] = 0;
   out_1430967006122356882[304] = 0;
   out_1430967006122356882[305] = 0;
   out_1430967006122356882[306] = 0;
   out_1430967006122356882[307] = 1.0;
   out_1430967006122356882[308] = 0;
   out_1430967006122356882[309] = 0;
   out_1430967006122356882[310] = 0;
   out_1430967006122356882[311] = 0;
   out_1430967006122356882[312] = 0;
   out_1430967006122356882[313] = 0;
   out_1430967006122356882[314] = 0;
   out_1430967006122356882[315] = 0;
   out_1430967006122356882[316] = 0;
   out_1430967006122356882[317] = 0;
   out_1430967006122356882[318] = 0;
   out_1430967006122356882[319] = 0;
   out_1430967006122356882[320] = 0;
   out_1430967006122356882[321] = 0;
   out_1430967006122356882[322] = 0;
   out_1430967006122356882[323] = 0;
   out_1430967006122356882[324] = 0;
   out_1430967006122356882[325] = 0;
   out_1430967006122356882[326] = 0;
   out_1430967006122356882[327] = 0;
   out_1430967006122356882[328] = 0;
   out_1430967006122356882[329] = 1.0;
   out_1430967006122356882[330] = 0;
   out_1430967006122356882[331] = 0;
   out_1430967006122356882[332] = 0;
   out_1430967006122356882[333] = 0;
   out_1430967006122356882[334] = 0;
   out_1430967006122356882[335] = 0;
   out_1430967006122356882[336] = 0;
   out_1430967006122356882[337] = 0;
   out_1430967006122356882[338] = 0;
   out_1430967006122356882[339] = 0;
   out_1430967006122356882[340] = 0;
   out_1430967006122356882[341] = 0;
   out_1430967006122356882[342] = 0;
   out_1430967006122356882[343] = 0;
   out_1430967006122356882[344] = 0;
   out_1430967006122356882[345] = 0;
   out_1430967006122356882[346] = 0;
   out_1430967006122356882[347] = 0;
   out_1430967006122356882[348] = 0;
   out_1430967006122356882[349] = 0;
   out_1430967006122356882[350] = 0;
   out_1430967006122356882[351] = 1.0;
   out_1430967006122356882[352] = 0;
   out_1430967006122356882[353] = 0;
   out_1430967006122356882[354] = 0;
   out_1430967006122356882[355] = 0;
   out_1430967006122356882[356] = 0;
   out_1430967006122356882[357] = 0;
   out_1430967006122356882[358] = 0;
   out_1430967006122356882[359] = 0;
   out_1430967006122356882[360] = 0;
   out_1430967006122356882[361] = 0;
   out_1430967006122356882[362] = 0;
   out_1430967006122356882[363] = 0;
   out_1430967006122356882[364] = 0;
   out_1430967006122356882[365] = 0;
   out_1430967006122356882[366] = 0;
   out_1430967006122356882[367] = 0;
   out_1430967006122356882[368] = 0;
   out_1430967006122356882[369] = 0;
   out_1430967006122356882[370] = 0;
   out_1430967006122356882[371] = 0;
   out_1430967006122356882[372] = 0;
   out_1430967006122356882[373] = 1.0;
   out_1430967006122356882[374] = 0;
   out_1430967006122356882[375] = 0;
   out_1430967006122356882[376] = 0;
   out_1430967006122356882[377] = 0;
   out_1430967006122356882[378] = 0;
   out_1430967006122356882[379] = 0;
   out_1430967006122356882[380] = 0;
   out_1430967006122356882[381] = 0;
   out_1430967006122356882[382] = 0;
   out_1430967006122356882[383] = 0;
   out_1430967006122356882[384] = 0;
   out_1430967006122356882[385] = 0;
   out_1430967006122356882[386] = 0;
   out_1430967006122356882[387] = 0;
   out_1430967006122356882[388] = 0;
   out_1430967006122356882[389] = 0;
   out_1430967006122356882[390] = 0;
   out_1430967006122356882[391] = 0;
   out_1430967006122356882[392] = 0;
   out_1430967006122356882[393] = 0;
   out_1430967006122356882[394] = 0;
   out_1430967006122356882[395] = 1.0;
   out_1430967006122356882[396] = 0;
   out_1430967006122356882[397] = 0;
   out_1430967006122356882[398] = 0;
   out_1430967006122356882[399] = 0;
   out_1430967006122356882[400] = 0;
   out_1430967006122356882[401] = 0;
   out_1430967006122356882[402] = 0;
   out_1430967006122356882[403] = 0;
   out_1430967006122356882[404] = 0;
   out_1430967006122356882[405] = 0;
   out_1430967006122356882[406] = 0;
   out_1430967006122356882[407] = 0;
   out_1430967006122356882[408] = 0;
   out_1430967006122356882[409] = 0;
   out_1430967006122356882[410] = 0;
   out_1430967006122356882[411] = 0;
   out_1430967006122356882[412] = 0;
   out_1430967006122356882[413] = 0;
   out_1430967006122356882[414] = 0;
   out_1430967006122356882[415] = 0;
   out_1430967006122356882[416] = 0;
   out_1430967006122356882[417] = 1.0;
   out_1430967006122356882[418] = 0;
   out_1430967006122356882[419] = 0;
   out_1430967006122356882[420] = 0;
   out_1430967006122356882[421] = 0;
   out_1430967006122356882[422] = 0;
   out_1430967006122356882[423] = 0;
   out_1430967006122356882[424] = 0;
   out_1430967006122356882[425] = 0;
   out_1430967006122356882[426] = 0;
   out_1430967006122356882[427] = 0;
   out_1430967006122356882[428] = 0;
   out_1430967006122356882[429] = 0;
   out_1430967006122356882[430] = 0;
   out_1430967006122356882[431] = 0;
   out_1430967006122356882[432] = 0;
   out_1430967006122356882[433] = 0;
   out_1430967006122356882[434] = 0;
   out_1430967006122356882[435] = 0;
   out_1430967006122356882[436] = 0;
   out_1430967006122356882[437] = 0;
   out_1430967006122356882[438] = 0;
   out_1430967006122356882[439] = 1.0;
   out_1430967006122356882[440] = 0;
   out_1430967006122356882[441] = 0;
   out_1430967006122356882[442] = 0;
   out_1430967006122356882[443] = 0;
   out_1430967006122356882[444] = 0;
   out_1430967006122356882[445] = 0;
   out_1430967006122356882[446] = 0;
   out_1430967006122356882[447] = 0;
   out_1430967006122356882[448] = 0;
   out_1430967006122356882[449] = 0;
   out_1430967006122356882[450] = 0;
   out_1430967006122356882[451] = 0;
   out_1430967006122356882[452] = 0;
   out_1430967006122356882[453] = 0;
   out_1430967006122356882[454] = 0;
   out_1430967006122356882[455] = 0;
   out_1430967006122356882[456] = 0;
   out_1430967006122356882[457] = 0;
   out_1430967006122356882[458] = 0;
   out_1430967006122356882[459] = 0;
   out_1430967006122356882[460] = 0;
   out_1430967006122356882[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2072141370447749105) {
   out_2072141370447749105[0] = dt*state[7] + state[0];
   out_2072141370447749105[1] = dt*state[8] + state[1];
   out_2072141370447749105[2] = dt*state[9] + state[2];
   out_2072141370447749105[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2072141370447749105[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2072141370447749105[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2072141370447749105[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2072141370447749105[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2072141370447749105[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2072141370447749105[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2072141370447749105[10] = state[10];
   out_2072141370447749105[11] = state[11];
   out_2072141370447749105[12] = state[12];
   out_2072141370447749105[13] = state[13];
   out_2072141370447749105[14] = state[14];
   out_2072141370447749105[15] = state[15];
   out_2072141370447749105[16] = state[16];
   out_2072141370447749105[17] = state[17];
   out_2072141370447749105[18] = state[18];
   out_2072141370447749105[19] = state[19];
   out_2072141370447749105[20] = state[20];
   out_2072141370447749105[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1319245241326118670) {
   out_1319245241326118670[0] = 1;
   out_1319245241326118670[1] = 0;
   out_1319245241326118670[2] = 0;
   out_1319245241326118670[3] = 0;
   out_1319245241326118670[4] = 0;
   out_1319245241326118670[5] = 0;
   out_1319245241326118670[6] = dt;
   out_1319245241326118670[7] = 0;
   out_1319245241326118670[8] = 0;
   out_1319245241326118670[9] = 0;
   out_1319245241326118670[10] = 0;
   out_1319245241326118670[11] = 0;
   out_1319245241326118670[12] = 0;
   out_1319245241326118670[13] = 0;
   out_1319245241326118670[14] = 0;
   out_1319245241326118670[15] = 0;
   out_1319245241326118670[16] = 0;
   out_1319245241326118670[17] = 0;
   out_1319245241326118670[18] = 0;
   out_1319245241326118670[19] = 0;
   out_1319245241326118670[20] = 0;
   out_1319245241326118670[21] = 0;
   out_1319245241326118670[22] = 1;
   out_1319245241326118670[23] = 0;
   out_1319245241326118670[24] = 0;
   out_1319245241326118670[25] = 0;
   out_1319245241326118670[26] = 0;
   out_1319245241326118670[27] = 0;
   out_1319245241326118670[28] = dt;
   out_1319245241326118670[29] = 0;
   out_1319245241326118670[30] = 0;
   out_1319245241326118670[31] = 0;
   out_1319245241326118670[32] = 0;
   out_1319245241326118670[33] = 0;
   out_1319245241326118670[34] = 0;
   out_1319245241326118670[35] = 0;
   out_1319245241326118670[36] = 0;
   out_1319245241326118670[37] = 0;
   out_1319245241326118670[38] = 0;
   out_1319245241326118670[39] = 0;
   out_1319245241326118670[40] = 0;
   out_1319245241326118670[41] = 0;
   out_1319245241326118670[42] = 0;
   out_1319245241326118670[43] = 0;
   out_1319245241326118670[44] = 1;
   out_1319245241326118670[45] = 0;
   out_1319245241326118670[46] = 0;
   out_1319245241326118670[47] = 0;
   out_1319245241326118670[48] = 0;
   out_1319245241326118670[49] = 0;
   out_1319245241326118670[50] = dt;
   out_1319245241326118670[51] = 0;
   out_1319245241326118670[52] = 0;
   out_1319245241326118670[53] = 0;
   out_1319245241326118670[54] = 0;
   out_1319245241326118670[55] = 0;
   out_1319245241326118670[56] = 0;
   out_1319245241326118670[57] = 0;
   out_1319245241326118670[58] = 0;
   out_1319245241326118670[59] = 0;
   out_1319245241326118670[60] = 0;
   out_1319245241326118670[61] = 0;
   out_1319245241326118670[62] = 0;
   out_1319245241326118670[63] = 0;
   out_1319245241326118670[64] = 0;
   out_1319245241326118670[65] = 0;
   out_1319245241326118670[66] = 1;
   out_1319245241326118670[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1319245241326118670[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1319245241326118670[69] = 0;
   out_1319245241326118670[70] = 0;
   out_1319245241326118670[71] = 0;
   out_1319245241326118670[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1319245241326118670[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1319245241326118670[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1319245241326118670[75] = 0;
   out_1319245241326118670[76] = 0;
   out_1319245241326118670[77] = 0;
   out_1319245241326118670[78] = 0;
   out_1319245241326118670[79] = 0;
   out_1319245241326118670[80] = 0;
   out_1319245241326118670[81] = 0;
   out_1319245241326118670[82] = 0;
   out_1319245241326118670[83] = 0;
   out_1319245241326118670[84] = 0;
   out_1319245241326118670[85] = 0;
   out_1319245241326118670[86] = 0;
   out_1319245241326118670[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1319245241326118670[88] = 1;
   out_1319245241326118670[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1319245241326118670[90] = 0;
   out_1319245241326118670[91] = 0;
   out_1319245241326118670[92] = 0;
   out_1319245241326118670[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1319245241326118670[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1319245241326118670[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1319245241326118670[96] = 0;
   out_1319245241326118670[97] = 0;
   out_1319245241326118670[98] = 0;
   out_1319245241326118670[99] = 0;
   out_1319245241326118670[100] = 0;
   out_1319245241326118670[101] = 0;
   out_1319245241326118670[102] = 0;
   out_1319245241326118670[103] = 0;
   out_1319245241326118670[104] = 0;
   out_1319245241326118670[105] = 0;
   out_1319245241326118670[106] = 0;
   out_1319245241326118670[107] = 0;
   out_1319245241326118670[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1319245241326118670[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1319245241326118670[110] = 1;
   out_1319245241326118670[111] = 0;
   out_1319245241326118670[112] = 0;
   out_1319245241326118670[113] = 0;
   out_1319245241326118670[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1319245241326118670[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1319245241326118670[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1319245241326118670[117] = 0;
   out_1319245241326118670[118] = 0;
   out_1319245241326118670[119] = 0;
   out_1319245241326118670[120] = 0;
   out_1319245241326118670[121] = 0;
   out_1319245241326118670[122] = 0;
   out_1319245241326118670[123] = 0;
   out_1319245241326118670[124] = 0;
   out_1319245241326118670[125] = 0;
   out_1319245241326118670[126] = 0;
   out_1319245241326118670[127] = 0;
   out_1319245241326118670[128] = 0;
   out_1319245241326118670[129] = 0;
   out_1319245241326118670[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1319245241326118670[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1319245241326118670[132] = 1;
   out_1319245241326118670[133] = 0;
   out_1319245241326118670[134] = 0;
   out_1319245241326118670[135] = 0;
   out_1319245241326118670[136] = 0;
   out_1319245241326118670[137] = 0;
   out_1319245241326118670[138] = 0;
   out_1319245241326118670[139] = 0;
   out_1319245241326118670[140] = 0;
   out_1319245241326118670[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1319245241326118670[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1319245241326118670[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1319245241326118670[144] = 0;
   out_1319245241326118670[145] = 0;
   out_1319245241326118670[146] = 0;
   out_1319245241326118670[147] = 0;
   out_1319245241326118670[148] = 0;
   out_1319245241326118670[149] = 0;
   out_1319245241326118670[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1319245241326118670[151] = 0;
   out_1319245241326118670[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1319245241326118670[153] = 0;
   out_1319245241326118670[154] = 1;
   out_1319245241326118670[155] = 0;
   out_1319245241326118670[156] = 0;
   out_1319245241326118670[157] = 0;
   out_1319245241326118670[158] = 0;
   out_1319245241326118670[159] = 0;
   out_1319245241326118670[160] = 0;
   out_1319245241326118670[161] = 0;
   out_1319245241326118670[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1319245241326118670[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1319245241326118670[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1319245241326118670[165] = 0;
   out_1319245241326118670[166] = 0;
   out_1319245241326118670[167] = 0;
   out_1319245241326118670[168] = 0;
   out_1319245241326118670[169] = 0;
   out_1319245241326118670[170] = 0;
   out_1319245241326118670[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1319245241326118670[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1319245241326118670[173] = 0;
   out_1319245241326118670[174] = 0;
   out_1319245241326118670[175] = 0;
   out_1319245241326118670[176] = 1;
   out_1319245241326118670[177] = 0;
   out_1319245241326118670[178] = 0;
   out_1319245241326118670[179] = 0;
   out_1319245241326118670[180] = 0;
   out_1319245241326118670[181] = 0;
   out_1319245241326118670[182] = 0;
   out_1319245241326118670[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1319245241326118670[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1319245241326118670[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1319245241326118670[186] = 0;
   out_1319245241326118670[187] = 0;
   out_1319245241326118670[188] = 0;
   out_1319245241326118670[189] = 0;
   out_1319245241326118670[190] = 0;
   out_1319245241326118670[191] = 0;
   out_1319245241326118670[192] = 0;
   out_1319245241326118670[193] = 0;
   out_1319245241326118670[194] = 0;
   out_1319245241326118670[195] = 0;
   out_1319245241326118670[196] = 0;
   out_1319245241326118670[197] = 0;
   out_1319245241326118670[198] = 1;
   out_1319245241326118670[199] = 0;
   out_1319245241326118670[200] = 0;
   out_1319245241326118670[201] = 0;
   out_1319245241326118670[202] = 0;
   out_1319245241326118670[203] = 0;
   out_1319245241326118670[204] = 0;
   out_1319245241326118670[205] = 0;
   out_1319245241326118670[206] = 0;
   out_1319245241326118670[207] = 0;
   out_1319245241326118670[208] = 0;
   out_1319245241326118670[209] = 0;
   out_1319245241326118670[210] = 0;
   out_1319245241326118670[211] = 0;
   out_1319245241326118670[212] = 0;
   out_1319245241326118670[213] = 0;
   out_1319245241326118670[214] = 0;
   out_1319245241326118670[215] = 0;
   out_1319245241326118670[216] = 0;
   out_1319245241326118670[217] = 0;
   out_1319245241326118670[218] = 0;
   out_1319245241326118670[219] = 0;
   out_1319245241326118670[220] = 1;
   out_1319245241326118670[221] = 0;
   out_1319245241326118670[222] = 0;
   out_1319245241326118670[223] = 0;
   out_1319245241326118670[224] = 0;
   out_1319245241326118670[225] = 0;
   out_1319245241326118670[226] = 0;
   out_1319245241326118670[227] = 0;
   out_1319245241326118670[228] = 0;
   out_1319245241326118670[229] = 0;
   out_1319245241326118670[230] = 0;
   out_1319245241326118670[231] = 0;
   out_1319245241326118670[232] = 0;
   out_1319245241326118670[233] = 0;
   out_1319245241326118670[234] = 0;
   out_1319245241326118670[235] = 0;
   out_1319245241326118670[236] = 0;
   out_1319245241326118670[237] = 0;
   out_1319245241326118670[238] = 0;
   out_1319245241326118670[239] = 0;
   out_1319245241326118670[240] = 0;
   out_1319245241326118670[241] = 0;
   out_1319245241326118670[242] = 1;
   out_1319245241326118670[243] = 0;
   out_1319245241326118670[244] = 0;
   out_1319245241326118670[245] = 0;
   out_1319245241326118670[246] = 0;
   out_1319245241326118670[247] = 0;
   out_1319245241326118670[248] = 0;
   out_1319245241326118670[249] = 0;
   out_1319245241326118670[250] = 0;
   out_1319245241326118670[251] = 0;
   out_1319245241326118670[252] = 0;
   out_1319245241326118670[253] = 0;
   out_1319245241326118670[254] = 0;
   out_1319245241326118670[255] = 0;
   out_1319245241326118670[256] = 0;
   out_1319245241326118670[257] = 0;
   out_1319245241326118670[258] = 0;
   out_1319245241326118670[259] = 0;
   out_1319245241326118670[260] = 0;
   out_1319245241326118670[261] = 0;
   out_1319245241326118670[262] = 0;
   out_1319245241326118670[263] = 0;
   out_1319245241326118670[264] = 1;
   out_1319245241326118670[265] = 0;
   out_1319245241326118670[266] = 0;
   out_1319245241326118670[267] = 0;
   out_1319245241326118670[268] = 0;
   out_1319245241326118670[269] = 0;
   out_1319245241326118670[270] = 0;
   out_1319245241326118670[271] = 0;
   out_1319245241326118670[272] = 0;
   out_1319245241326118670[273] = 0;
   out_1319245241326118670[274] = 0;
   out_1319245241326118670[275] = 0;
   out_1319245241326118670[276] = 0;
   out_1319245241326118670[277] = 0;
   out_1319245241326118670[278] = 0;
   out_1319245241326118670[279] = 0;
   out_1319245241326118670[280] = 0;
   out_1319245241326118670[281] = 0;
   out_1319245241326118670[282] = 0;
   out_1319245241326118670[283] = 0;
   out_1319245241326118670[284] = 0;
   out_1319245241326118670[285] = 0;
   out_1319245241326118670[286] = 1;
   out_1319245241326118670[287] = 0;
   out_1319245241326118670[288] = 0;
   out_1319245241326118670[289] = 0;
   out_1319245241326118670[290] = 0;
   out_1319245241326118670[291] = 0;
   out_1319245241326118670[292] = 0;
   out_1319245241326118670[293] = 0;
   out_1319245241326118670[294] = 0;
   out_1319245241326118670[295] = 0;
   out_1319245241326118670[296] = 0;
   out_1319245241326118670[297] = 0;
   out_1319245241326118670[298] = 0;
   out_1319245241326118670[299] = 0;
   out_1319245241326118670[300] = 0;
   out_1319245241326118670[301] = 0;
   out_1319245241326118670[302] = 0;
   out_1319245241326118670[303] = 0;
   out_1319245241326118670[304] = 0;
   out_1319245241326118670[305] = 0;
   out_1319245241326118670[306] = 0;
   out_1319245241326118670[307] = 0;
   out_1319245241326118670[308] = 1;
   out_1319245241326118670[309] = 0;
   out_1319245241326118670[310] = 0;
   out_1319245241326118670[311] = 0;
   out_1319245241326118670[312] = 0;
   out_1319245241326118670[313] = 0;
   out_1319245241326118670[314] = 0;
   out_1319245241326118670[315] = 0;
   out_1319245241326118670[316] = 0;
   out_1319245241326118670[317] = 0;
   out_1319245241326118670[318] = 0;
   out_1319245241326118670[319] = 0;
   out_1319245241326118670[320] = 0;
   out_1319245241326118670[321] = 0;
   out_1319245241326118670[322] = 0;
   out_1319245241326118670[323] = 0;
   out_1319245241326118670[324] = 0;
   out_1319245241326118670[325] = 0;
   out_1319245241326118670[326] = 0;
   out_1319245241326118670[327] = 0;
   out_1319245241326118670[328] = 0;
   out_1319245241326118670[329] = 0;
   out_1319245241326118670[330] = 1;
   out_1319245241326118670[331] = 0;
   out_1319245241326118670[332] = 0;
   out_1319245241326118670[333] = 0;
   out_1319245241326118670[334] = 0;
   out_1319245241326118670[335] = 0;
   out_1319245241326118670[336] = 0;
   out_1319245241326118670[337] = 0;
   out_1319245241326118670[338] = 0;
   out_1319245241326118670[339] = 0;
   out_1319245241326118670[340] = 0;
   out_1319245241326118670[341] = 0;
   out_1319245241326118670[342] = 0;
   out_1319245241326118670[343] = 0;
   out_1319245241326118670[344] = 0;
   out_1319245241326118670[345] = 0;
   out_1319245241326118670[346] = 0;
   out_1319245241326118670[347] = 0;
   out_1319245241326118670[348] = 0;
   out_1319245241326118670[349] = 0;
   out_1319245241326118670[350] = 0;
   out_1319245241326118670[351] = 0;
   out_1319245241326118670[352] = 1;
   out_1319245241326118670[353] = 0;
   out_1319245241326118670[354] = 0;
   out_1319245241326118670[355] = 0;
   out_1319245241326118670[356] = 0;
   out_1319245241326118670[357] = 0;
   out_1319245241326118670[358] = 0;
   out_1319245241326118670[359] = 0;
   out_1319245241326118670[360] = 0;
   out_1319245241326118670[361] = 0;
   out_1319245241326118670[362] = 0;
   out_1319245241326118670[363] = 0;
   out_1319245241326118670[364] = 0;
   out_1319245241326118670[365] = 0;
   out_1319245241326118670[366] = 0;
   out_1319245241326118670[367] = 0;
   out_1319245241326118670[368] = 0;
   out_1319245241326118670[369] = 0;
   out_1319245241326118670[370] = 0;
   out_1319245241326118670[371] = 0;
   out_1319245241326118670[372] = 0;
   out_1319245241326118670[373] = 0;
   out_1319245241326118670[374] = 1;
   out_1319245241326118670[375] = 0;
   out_1319245241326118670[376] = 0;
   out_1319245241326118670[377] = 0;
   out_1319245241326118670[378] = 0;
   out_1319245241326118670[379] = 0;
   out_1319245241326118670[380] = 0;
   out_1319245241326118670[381] = 0;
   out_1319245241326118670[382] = 0;
   out_1319245241326118670[383] = 0;
   out_1319245241326118670[384] = 0;
   out_1319245241326118670[385] = 0;
   out_1319245241326118670[386] = 0;
   out_1319245241326118670[387] = 0;
   out_1319245241326118670[388] = 0;
   out_1319245241326118670[389] = 0;
   out_1319245241326118670[390] = 0;
   out_1319245241326118670[391] = 0;
   out_1319245241326118670[392] = 0;
   out_1319245241326118670[393] = 0;
   out_1319245241326118670[394] = 0;
   out_1319245241326118670[395] = 0;
   out_1319245241326118670[396] = 1;
   out_1319245241326118670[397] = 0;
   out_1319245241326118670[398] = 0;
   out_1319245241326118670[399] = 0;
   out_1319245241326118670[400] = 0;
   out_1319245241326118670[401] = 0;
   out_1319245241326118670[402] = 0;
   out_1319245241326118670[403] = 0;
   out_1319245241326118670[404] = 0;
   out_1319245241326118670[405] = 0;
   out_1319245241326118670[406] = 0;
   out_1319245241326118670[407] = 0;
   out_1319245241326118670[408] = 0;
   out_1319245241326118670[409] = 0;
   out_1319245241326118670[410] = 0;
   out_1319245241326118670[411] = 0;
   out_1319245241326118670[412] = 0;
   out_1319245241326118670[413] = 0;
   out_1319245241326118670[414] = 0;
   out_1319245241326118670[415] = 0;
   out_1319245241326118670[416] = 0;
   out_1319245241326118670[417] = 0;
   out_1319245241326118670[418] = 1;
   out_1319245241326118670[419] = 0;
   out_1319245241326118670[420] = 0;
   out_1319245241326118670[421] = 0;
   out_1319245241326118670[422] = 0;
   out_1319245241326118670[423] = 0;
   out_1319245241326118670[424] = 0;
   out_1319245241326118670[425] = 0;
   out_1319245241326118670[426] = 0;
   out_1319245241326118670[427] = 0;
   out_1319245241326118670[428] = 0;
   out_1319245241326118670[429] = 0;
   out_1319245241326118670[430] = 0;
   out_1319245241326118670[431] = 0;
   out_1319245241326118670[432] = 0;
   out_1319245241326118670[433] = 0;
   out_1319245241326118670[434] = 0;
   out_1319245241326118670[435] = 0;
   out_1319245241326118670[436] = 0;
   out_1319245241326118670[437] = 0;
   out_1319245241326118670[438] = 0;
   out_1319245241326118670[439] = 0;
   out_1319245241326118670[440] = 1;
}
void h_4(double *state, double *unused, double *out_3991502446721311034) {
   out_3991502446721311034[0] = state[10] + state[13];
   out_3991502446721311034[1] = state[11] + state[14];
   out_3991502446721311034[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5055025497885333012) {
   out_5055025497885333012[0] = 0;
   out_5055025497885333012[1] = 0;
   out_5055025497885333012[2] = 0;
   out_5055025497885333012[3] = 0;
   out_5055025497885333012[4] = 0;
   out_5055025497885333012[5] = 0;
   out_5055025497885333012[6] = 0;
   out_5055025497885333012[7] = 0;
   out_5055025497885333012[8] = 0;
   out_5055025497885333012[9] = 0;
   out_5055025497885333012[10] = 1;
   out_5055025497885333012[11] = 0;
   out_5055025497885333012[12] = 0;
   out_5055025497885333012[13] = 1;
   out_5055025497885333012[14] = 0;
   out_5055025497885333012[15] = 0;
   out_5055025497885333012[16] = 0;
   out_5055025497885333012[17] = 0;
   out_5055025497885333012[18] = 0;
   out_5055025497885333012[19] = 0;
   out_5055025497885333012[20] = 0;
   out_5055025497885333012[21] = 0;
   out_5055025497885333012[22] = 0;
   out_5055025497885333012[23] = 0;
   out_5055025497885333012[24] = 0;
   out_5055025497885333012[25] = 0;
   out_5055025497885333012[26] = 0;
   out_5055025497885333012[27] = 0;
   out_5055025497885333012[28] = 0;
   out_5055025497885333012[29] = 0;
   out_5055025497885333012[30] = 0;
   out_5055025497885333012[31] = 0;
   out_5055025497885333012[32] = 0;
   out_5055025497885333012[33] = 1;
   out_5055025497885333012[34] = 0;
   out_5055025497885333012[35] = 0;
   out_5055025497885333012[36] = 1;
   out_5055025497885333012[37] = 0;
   out_5055025497885333012[38] = 0;
   out_5055025497885333012[39] = 0;
   out_5055025497885333012[40] = 0;
   out_5055025497885333012[41] = 0;
   out_5055025497885333012[42] = 0;
   out_5055025497885333012[43] = 0;
   out_5055025497885333012[44] = 0;
   out_5055025497885333012[45] = 0;
   out_5055025497885333012[46] = 0;
   out_5055025497885333012[47] = 0;
   out_5055025497885333012[48] = 0;
   out_5055025497885333012[49] = 0;
   out_5055025497885333012[50] = 0;
   out_5055025497885333012[51] = 0;
   out_5055025497885333012[52] = 0;
   out_5055025497885333012[53] = 0;
   out_5055025497885333012[54] = 0;
   out_5055025497885333012[55] = 0;
   out_5055025497885333012[56] = 1;
   out_5055025497885333012[57] = 0;
   out_5055025497885333012[58] = 0;
   out_5055025497885333012[59] = 1;
   out_5055025497885333012[60] = 0;
   out_5055025497885333012[61] = 0;
   out_5055025497885333012[62] = 0;
   out_5055025497885333012[63] = 0;
   out_5055025497885333012[64] = 0;
   out_5055025497885333012[65] = 0;
}
void h_9(double *state, double *unused, double *out_8713402624539862666) {
   out_8713402624539862666[0] = state[10];
   out_8713402624539862666[1] = state[11];
   out_8713402624539862666[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2232193437379114458) {
   out_2232193437379114458[0] = 0;
   out_2232193437379114458[1] = 0;
   out_2232193437379114458[2] = 0;
   out_2232193437379114458[3] = 0;
   out_2232193437379114458[4] = 0;
   out_2232193437379114458[5] = 0;
   out_2232193437379114458[6] = 0;
   out_2232193437379114458[7] = 0;
   out_2232193437379114458[8] = 0;
   out_2232193437379114458[9] = 0;
   out_2232193437379114458[10] = 1;
   out_2232193437379114458[11] = 0;
   out_2232193437379114458[12] = 0;
   out_2232193437379114458[13] = 0;
   out_2232193437379114458[14] = 0;
   out_2232193437379114458[15] = 0;
   out_2232193437379114458[16] = 0;
   out_2232193437379114458[17] = 0;
   out_2232193437379114458[18] = 0;
   out_2232193437379114458[19] = 0;
   out_2232193437379114458[20] = 0;
   out_2232193437379114458[21] = 0;
   out_2232193437379114458[22] = 0;
   out_2232193437379114458[23] = 0;
   out_2232193437379114458[24] = 0;
   out_2232193437379114458[25] = 0;
   out_2232193437379114458[26] = 0;
   out_2232193437379114458[27] = 0;
   out_2232193437379114458[28] = 0;
   out_2232193437379114458[29] = 0;
   out_2232193437379114458[30] = 0;
   out_2232193437379114458[31] = 0;
   out_2232193437379114458[32] = 0;
   out_2232193437379114458[33] = 1;
   out_2232193437379114458[34] = 0;
   out_2232193437379114458[35] = 0;
   out_2232193437379114458[36] = 0;
   out_2232193437379114458[37] = 0;
   out_2232193437379114458[38] = 0;
   out_2232193437379114458[39] = 0;
   out_2232193437379114458[40] = 0;
   out_2232193437379114458[41] = 0;
   out_2232193437379114458[42] = 0;
   out_2232193437379114458[43] = 0;
   out_2232193437379114458[44] = 0;
   out_2232193437379114458[45] = 0;
   out_2232193437379114458[46] = 0;
   out_2232193437379114458[47] = 0;
   out_2232193437379114458[48] = 0;
   out_2232193437379114458[49] = 0;
   out_2232193437379114458[50] = 0;
   out_2232193437379114458[51] = 0;
   out_2232193437379114458[52] = 0;
   out_2232193437379114458[53] = 0;
   out_2232193437379114458[54] = 0;
   out_2232193437379114458[55] = 0;
   out_2232193437379114458[56] = 1;
   out_2232193437379114458[57] = 0;
   out_2232193437379114458[58] = 0;
   out_2232193437379114458[59] = 0;
   out_2232193437379114458[60] = 0;
   out_2232193437379114458[61] = 0;
   out_2232193437379114458[62] = 0;
   out_2232193437379114458[63] = 0;
   out_2232193437379114458[64] = 0;
   out_2232193437379114458[65] = 0;
}
void h_10(double *state, double *unused, double *out_1585530232908739700) {
   out_1585530232908739700[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1585530232908739700[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1585530232908739700[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6253078100919733272) {
   out_6253078100919733272[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6253078100919733272[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6253078100919733272[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6253078100919733272[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6253078100919733272[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6253078100919733272[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6253078100919733272[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6253078100919733272[7] = 0;
   out_6253078100919733272[8] = 0;
   out_6253078100919733272[9] = 0;
   out_6253078100919733272[10] = 0;
   out_6253078100919733272[11] = 0;
   out_6253078100919733272[12] = 0;
   out_6253078100919733272[13] = 0;
   out_6253078100919733272[14] = 0;
   out_6253078100919733272[15] = 0;
   out_6253078100919733272[16] = 1;
   out_6253078100919733272[17] = 0;
   out_6253078100919733272[18] = 0;
   out_6253078100919733272[19] = 1;
   out_6253078100919733272[20] = 0;
   out_6253078100919733272[21] = 0;
   out_6253078100919733272[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6253078100919733272[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6253078100919733272[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6253078100919733272[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6253078100919733272[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6253078100919733272[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6253078100919733272[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6253078100919733272[29] = 0;
   out_6253078100919733272[30] = 0;
   out_6253078100919733272[31] = 0;
   out_6253078100919733272[32] = 0;
   out_6253078100919733272[33] = 0;
   out_6253078100919733272[34] = 0;
   out_6253078100919733272[35] = 0;
   out_6253078100919733272[36] = 0;
   out_6253078100919733272[37] = 0;
   out_6253078100919733272[38] = 0;
   out_6253078100919733272[39] = 1;
   out_6253078100919733272[40] = 0;
   out_6253078100919733272[41] = 0;
   out_6253078100919733272[42] = 1;
   out_6253078100919733272[43] = 0;
   out_6253078100919733272[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6253078100919733272[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6253078100919733272[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6253078100919733272[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6253078100919733272[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6253078100919733272[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6253078100919733272[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6253078100919733272[51] = 0;
   out_6253078100919733272[52] = 0;
   out_6253078100919733272[53] = 0;
   out_6253078100919733272[54] = 0;
   out_6253078100919733272[55] = 0;
   out_6253078100919733272[56] = 0;
   out_6253078100919733272[57] = 0;
   out_6253078100919733272[58] = 0;
   out_6253078100919733272[59] = 0;
   out_6253078100919733272[60] = 0;
   out_6253078100919733272[61] = 0;
   out_6253078100919733272[62] = 1;
   out_6253078100919733272[63] = 0;
   out_6253078100919733272[64] = 0;
   out_6253078100919733272[65] = 1;
}
void h_12(double *state, double *unused, double *out_585525772009571204) {
   out_585525772009571204[0] = state[0];
   out_585525772009571204[1] = state[1];
   out_585525772009571204[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7010460198781485608) {
   out_7010460198781485608[0] = 1;
   out_7010460198781485608[1] = 0;
   out_7010460198781485608[2] = 0;
   out_7010460198781485608[3] = 0;
   out_7010460198781485608[4] = 0;
   out_7010460198781485608[5] = 0;
   out_7010460198781485608[6] = 0;
   out_7010460198781485608[7] = 0;
   out_7010460198781485608[8] = 0;
   out_7010460198781485608[9] = 0;
   out_7010460198781485608[10] = 0;
   out_7010460198781485608[11] = 0;
   out_7010460198781485608[12] = 0;
   out_7010460198781485608[13] = 0;
   out_7010460198781485608[14] = 0;
   out_7010460198781485608[15] = 0;
   out_7010460198781485608[16] = 0;
   out_7010460198781485608[17] = 0;
   out_7010460198781485608[18] = 0;
   out_7010460198781485608[19] = 0;
   out_7010460198781485608[20] = 0;
   out_7010460198781485608[21] = 0;
   out_7010460198781485608[22] = 0;
   out_7010460198781485608[23] = 1;
   out_7010460198781485608[24] = 0;
   out_7010460198781485608[25] = 0;
   out_7010460198781485608[26] = 0;
   out_7010460198781485608[27] = 0;
   out_7010460198781485608[28] = 0;
   out_7010460198781485608[29] = 0;
   out_7010460198781485608[30] = 0;
   out_7010460198781485608[31] = 0;
   out_7010460198781485608[32] = 0;
   out_7010460198781485608[33] = 0;
   out_7010460198781485608[34] = 0;
   out_7010460198781485608[35] = 0;
   out_7010460198781485608[36] = 0;
   out_7010460198781485608[37] = 0;
   out_7010460198781485608[38] = 0;
   out_7010460198781485608[39] = 0;
   out_7010460198781485608[40] = 0;
   out_7010460198781485608[41] = 0;
   out_7010460198781485608[42] = 0;
   out_7010460198781485608[43] = 0;
   out_7010460198781485608[44] = 0;
   out_7010460198781485608[45] = 0;
   out_7010460198781485608[46] = 1;
   out_7010460198781485608[47] = 0;
   out_7010460198781485608[48] = 0;
   out_7010460198781485608[49] = 0;
   out_7010460198781485608[50] = 0;
   out_7010460198781485608[51] = 0;
   out_7010460198781485608[52] = 0;
   out_7010460198781485608[53] = 0;
   out_7010460198781485608[54] = 0;
   out_7010460198781485608[55] = 0;
   out_7010460198781485608[56] = 0;
   out_7010460198781485608[57] = 0;
   out_7010460198781485608[58] = 0;
   out_7010460198781485608[59] = 0;
   out_7010460198781485608[60] = 0;
   out_7010460198781485608[61] = 0;
   out_7010460198781485608[62] = 0;
   out_7010460198781485608[63] = 0;
   out_7010460198781485608[64] = 0;
   out_7010460198781485608[65] = 0;
}
void h_35(double *state, double *unused, double *out_7102552502524167431) {
   out_7102552502524167431[0] = state[7];
   out_7102552502524167431[1] = state[8];
   out_7102552502524167431[2] = state[9];
}
void H_35(double *state, double *unused, double *out_1688363440512725636) {
   out_1688363440512725636[0] = 0;
   out_1688363440512725636[1] = 0;
   out_1688363440512725636[2] = 0;
   out_1688363440512725636[3] = 0;
   out_1688363440512725636[4] = 0;
   out_1688363440512725636[5] = 0;
   out_1688363440512725636[6] = 0;
   out_1688363440512725636[7] = 1;
   out_1688363440512725636[8] = 0;
   out_1688363440512725636[9] = 0;
   out_1688363440512725636[10] = 0;
   out_1688363440512725636[11] = 0;
   out_1688363440512725636[12] = 0;
   out_1688363440512725636[13] = 0;
   out_1688363440512725636[14] = 0;
   out_1688363440512725636[15] = 0;
   out_1688363440512725636[16] = 0;
   out_1688363440512725636[17] = 0;
   out_1688363440512725636[18] = 0;
   out_1688363440512725636[19] = 0;
   out_1688363440512725636[20] = 0;
   out_1688363440512725636[21] = 0;
   out_1688363440512725636[22] = 0;
   out_1688363440512725636[23] = 0;
   out_1688363440512725636[24] = 0;
   out_1688363440512725636[25] = 0;
   out_1688363440512725636[26] = 0;
   out_1688363440512725636[27] = 0;
   out_1688363440512725636[28] = 0;
   out_1688363440512725636[29] = 0;
   out_1688363440512725636[30] = 1;
   out_1688363440512725636[31] = 0;
   out_1688363440512725636[32] = 0;
   out_1688363440512725636[33] = 0;
   out_1688363440512725636[34] = 0;
   out_1688363440512725636[35] = 0;
   out_1688363440512725636[36] = 0;
   out_1688363440512725636[37] = 0;
   out_1688363440512725636[38] = 0;
   out_1688363440512725636[39] = 0;
   out_1688363440512725636[40] = 0;
   out_1688363440512725636[41] = 0;
   out_1688363440512725636[42] = 0;
   out_1688363440512725636[43] = 0;
   out_1688363440512725636[44] = 0;
   out_1688363440512725636[45] = 0;
   out_1688363440512725636[46] = 0;
   out_1688363440512725636[47] = 0;
   out_1688363440512725636[48] = 0;
   out_1688363440512725636[49] = 0;
   out_1688363440512725636[50] = 0;
   out_1688363440512725636[51] = 0;
   out_1688363440512725636[52] = 0;
   out_1688363440512725636[53] = 1;
   out_1688363440512725636[54] = 0;
   out_1688363440512725636[55] = 0;
   out_1688363440512725636[56] = 0;
   out_1688363440512725636[57] = 0;
   out_1688363440512725636[58] = 0;
   out_1688363440512725636[59] = 0;
   out_1688363440512725636[60] = 0;
   out_1688363440512725636[61] = 0;
   out_1688363440512725636[62] = 0;
   out_1688363440512725636[63] = 0;
   out_1688363440512725636[64] = 0;
   out_1688363440512725636[65] = 0;
}
void h_32(double *state, double *unused, double *out_8369551405886268210) {
   out_8369551405886268210[0] = state[3];
   out_8369551405886268210[1] = state[4];
   out_8369551405886268210[2] = state[5];
   out_8369551405886268210[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7287773853379807869) {
   out_7287773853379807869[0] = 0;
   out_7287773853379807869[1] = 0;
   out_7287773853379807869[2] = 0;
   out_7287773853379807869[3] = 1;
   out_7287773853379807869[4] = 0;
   out_7287773853379807869[5] = 0;
   out_7287773853379807869[6] = 0;
   out_7287773853379807869[7] = 0;
   out_7287773853379807869[8] = 0;
   out_7287773853379807869[9] = 0;
   out_7287773853379807869[10] = 0;
   out_7287773853379807869[11] = 0;
   out_7287773853379807869[12] = 0;
   out_7287773853379807869[13] = 0;
   out_7287773853379807869[14] = 0;
   out_7287773853379807869[15] = 0;
   out_7287773853379807869[16] = 0;
   out_7287773853379807869[17] = 0;
   out_7287773853379807869[18] = 0;
   out_7287773853379807869[19] = 0;
   out_7287773853379807869[20] = 0;
   out_7287773853379807869[21] = 0;
   out_7287773853379807869[22] = 0;
   out_7287773853379807869[23] = 0;
   out_7287773853379807869[24] = 0;
   out_7287773853379807869[25] = 0;
   out_7287773853379807869[26] = 1;
   out_7287773853379807869[27] = 0;
   out_7287773853379807869[28] = 0;
   out_7287773853379807869[29] = 0;
   out_7287773853379807869[30] = 0;
   out_7287773853379807869[31] = 0;
   out_7287773853379807869[32] = 0;
   out_7287773853379807869[33] = 0;
   out_7287773853379807869[34] = 0;
   out_7287773853379807869[35] = 0;
   out_7287773853379807869[36] = 0;
   out_7287773853379807869[37] = 0;
   out_7287773853379807869[38] = 0;
   out_7287773853379807869[39] = 0;
   out_7287773853379807869[40] = 0;
   out_7287773853379807869[41] = 0;
   out_7287773853379807869[42] = 0;
   out_7287773853379807869[43] = 0;
   out_7287773853379807869[44] = 0;
   out_7287773853379807869[45] = 0;
   out_7287773853379807869[46] = 0;
   out_7287773853379807869[47] = 0;
   out_7287773853379807869[48] = 0;
   out_7287773853379807869[49] = 1;
   out_7287773853379807869[50] = 0;
   out_7287773853379807869[51] = 0;
   out_7287773853379807869[52] = 0;
   out_7287773853379807869[53] = 0;
   out_7287773853379807869[54] = 0;
   out_7287773853379807869[55] = 0;
   out_7287773853379807869[56] = 0;
   out_7287773853379807869[57] = 0;
   out_7287773853379807869[58] = 0;
   out_7287773853379807869[59] = 0;
   out_7287773853379807869[60] = 0;
   out_7287773853379807869[61] = 0;
   out_7287773853379807869[62] = 0;
   out_7287773853379807869[63] = 0;
   out_7287773853379807869[64] = 0;
   out_7287773853379807869[65] = 0;
   out_7287773853379807869[66] = 0;
   out_7287773853379807869[67] = 0;
   out_7287773853379807869[68] = 0;
   out_7287773853379807869[69] = 0;
   out_7287773853379807869[70] = 0;
   out_7287773853379807869[71] = 0;
   out_7287773853379807869[72] = 1;
   out_7287773853379807869[73] = 0;
   out_7287773853379807869[74] = 0;
   out_7287773853379807869[75] = 0;
   out_7287773853379807869[76] = 0;
   out_7287773853379807869[77] = 0;
   out_7287773853379807869[78] = 0;
   out_7287773853379807869[79] = 0;
   out_7287773853379807869[80] = 0;
   out_7287773853379807869[81] = 0;
   out_7287773853379807869[82] = 0;
   out_7287773853379807869[83] = 0;
   out_7287773853379807869[84] = 0;
   out_7287773853379807869[85] = 0;
   out_7287773853379807869[86] = 0;
   out_7287773853379807869[87] = 0;
}
void h_13(double *state, double *unused, double *out_2011964399576628187) {
   out_2011964399576628187[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2011964399576628187[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2011964399576628187[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7475756452684609359) {
   out_7475756452684609359[0] = 0;
   out_7475756452684609359[1] = 0;
   out_7475756452684609359[2] = 0;
   out_7475756452684609359[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7475756452684609359[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7475756452684609359[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7475756452684609359[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7475756452684609359[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7475756452684609359[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7475756452684609359[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7475756452684609359[10] = 0;
   out_7475756452684609359[11] = 0;
   out_7475756452684609359[12] = 0;
   out_7475756452684609359[13] = 0;
   out_7475756452684609359[14] = 0;
   out_7475756452684609359[15] = 0;
   out_7475756452684609359[16] = 0;
   out_7475756452684609359[17] = 0;
   out_7475756452684609359[18] = 0;
   out_7475756452684609359[19] = 0;
   out_7475756452684609359[20] = 0;
   out_7475756452684609359[21] = 0;
   out_7475756452684609359[22] = 0;
   out_7475756452684609359[23] = 0;
   out_7475756452684609359[24] = 0;
   out_7475756452684609359[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7475756452684609359[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7475756452684609359[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7475756452684609359[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7475756452684609359[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7475756452684609359[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7475756452684609359[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7475756452684609359[32] = 0;
   out_7475756452684609359[33] = 0;
   out_7475756452684609359[34] = 0;
   out_7475756452684609359[35] = 0;
   out_7475756452684609359[36] = 0;
   out_7475756452684609359[37] = 0;
   out_7475756452684609359[38] = 0;
   out_7475756452684609359[39] = 0;
   out_7475756452684609359[40] = 0;
   out_7475756452684609359[41] = 0;
   out_7475756452684609359[42] = 0;
   out_7475756452684609359[43] = 0;
   out_7475756452684609359[44] = 0;
   out_7475756452684609359[45] = 0;
   out_7475756452684609359[46] = 0;
   out_7475756452684609359[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7475756452684609359[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7475756452684609359[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7475756452684609359[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7475756452684609359[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7475756452684609359[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7475756452684609359[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7475756452684609359[54] = 0;
   out_7475756452684609359[55] = 0;
   out_7475756452684609359[56] = 0;
   out_7475756452684609359[57] = 0;
   out_7475756452684609359[58] = 0;
   out_7475756452684609359[59] = 0;
   out_7475756452684609359[60] = 0;
   out_7475756452684609359[61] = 0;
   out_7475756452684609359[62] = 0;
   out_7475756452684609359[63] = 0;
   out_7475756452684609359[64] = 0;
   out_7475756452684609359[65] = 0;
}
void h_14(double *state, double *unused, double *out_8713402624539862666) {
   out_8713402624539862666[0] = state[10];
   out_8713402624539862666[1] = state[11];
   out_8713402624539862666[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2232193437379114458) {
   out_2232193437379114458[0] = 0;
   out_2232193437379114458[1] = 0;
   out_2232193437379114458[2] = 0;
   out_2232193437379114458[3] = 0;
   out_2232193437379114458[4] = 0;
   out_2232193437379114458[5] = 0;
   out_2232193437379114458[6] = 0;
   out_2232193437379114458[7] = 0;
   out_2232193437379114458[8] = 0;
   out_2232193437379114458[9] = 0;
   out_2232193437379114458[10] = 1;
   out_2232193437379114458[11] = 0;
   out_2232193437379114458[12] = 0;
   out_2232193437379114458[13] = 0;
   out_2232193437379114458[14] = 0;
   out_2232193437379114458[15] = 0;
   out_2232193437379114458[16] = 0;
   out_2232193437379114458[17] = 0;
   out_2232193437379114458[18] = 0;
   out_2232193437379114458[19] = 0;
   out_2232193437379114458[20] = 0;
   out_2232193437379114458[21] = 0;
   out_2232193437379114458[22] = 0;
   out_2232193437379114458[23] = 0;
   out_2232193437379114458[24] = 0;
   out_2232193437379114458[25] = 0;
   out_2232193437379114458[26] = 0;
   out_2232193437379114458[27] = 0;
   out_2232193437379114458[28] = 0;
   out_2232193437379114458[29] = 0;
   out_2232193437379114458[30] = 0;
   out_2232193437379114458[31] = 0;
   out_2232193437379114458[32] = 0;
   out_2232193437379114458[33] = 1;
   out_2232193437379114458[34] = 0;
   out_2232193437379114458[35] = 0;
   out_2232193437379114458[36] = 0;
   out_2232193437379114458[37] = 0;
   out_2232193437379114458[38] = 0;
   out_2232193437379114458[39] = 0;
   out_2232193437379114458[40] = 0;
   out_2232193437379114458[41] = 0;
   out_2232193437379114458[42] = 0;
   out_2232193437379114458[43] = 0;
   out_2232193437379114458[44] = 0;
   out_2232193437379114458[45] = 0;
   out_2232193437379114458[46] = 0;
   out_2232193437379114458[47] = 0;
   out_2232193437379114458[48] = 0;
   out_2232193437379114458[49] = 0;
   out_2232193437379114458[50] = 0;
   out_2232193437379114458[51] = 0;
   out_2232193437379114458[52] = 0;
   out_2232193437379114458[53] = 0;
   out_2232193437379114458[54] = 0;
   out_2232193437379114458[55] = 0;
   out_2232193437379114458[56] = 1;
   out_2232193437379114458[57] = 0;
   out_2232193437379114458[58] = 0;
   out_2232193437379114458[59] = 0;
   out_2232193437379114458[60] = 0;
   out_2232193437379114458[61] = 0;
   out_2232193437379114458[62] = 0;
   out_2232193437379114458[63] = 0;
   out_2232193437379114458[64] = 0;
   out_2232193437379114458[65] = 0;
}
void h_33(double *state, double *unused, double *out_8138782813319406848) {
   out_8138782813319406848[0] = state[16];
   out_8138782813319406848[1] = state[17];
   out_8138782813319406848[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8508222852760988793) {
   out_8508222852760988793[0] = 0;
   out_8508222852760988793[1] = 0;
   out_8508222852760988793[2] = 0;
   out_8508222852760988793[3] = 0;
   out_8508222852760988793[4] = 0;
   out_8508222852760988793[5] = 0;
   out_8508222852760988793[6] = 0;
   out_8508222852760988793[7] = 0;
   out_8508222852760988793[8] = 0;
   out_8508222852760988793[9] = 0;
   out_8508222852760988793[10] = 0;
   out_8508222852760988793[11] = 0;
   out_8508222852760988793[12] = 0;
   out_8508222852760988793[13] = 0;
   out_8508222852760988793[14] = 0;
   out_8508222852760988793[15] = 0;
   out_8508222852760988793[16] = 1;
   out_8508222852760988793[17] = 0;
   out_8508222852760988793[18] = 0;
   out_8508222852760988793[19] = 0;
   out_8508222852760988793[20] = 0;
   out_8508222852760988793[21] = 0;
   out_8508222852760988793[22] = 0;
   out_8508222852760988793[23] = 0;
   out_8508222852760988793[24] = 0;
   out_8508222852760988793[25] = 0;
   out_8508222852760988793[26] = 0;
   out_8508222852760988793[27] = 0;
   out_8508222852760988793[28] = 0;
   out_8508222852760988793[29] = 0;
   out_8508222852760988793[30] = 0;
   out_8508222852760988793[31] = 0;
   out_8508222852760988793[32] = 0;
   out_8508222852760988793[33] = 0;
   out_8508222852760988793[34] = 0;
   out_8508222852760988793[35] = 0;
   out_8508222852760988793[36] = 0;
   out_8508222852760988793[37] = 0;
   out_8508222852760988793[38] = 0;
   out_8508222852760988793[39] = 1;
   out_8508222852760988793[40] = 0;
   out_8508222852760988793[41] = 0;
   out_8508222852760988793[42] = 0;
   out_8508222852760988793[43] = 0;
   out_8508222852760988793[44] = 0;
   out_8508222852760988793[45] = 0;
   out_8508222852760988793[46] = 0;
   out_8508222852760988793[47] = 0;
   out_8508222852760988793[48] = 0;
   out_8508222852760988793[49] = 0;
   out_8508222852760988793[50] = 0;
   out_8508222852760988793[51] = 0;
   out_8508222852760988793[52] = 0;
   out_8508222852760988793[53] = 0;
   out_8508222852760988793[54] = 0;
   out_8508222852760988793[55] = 0;
   out_8508222852760988793[56] = 0;
   out_8508222852760988793[57] = 0;
   out_8508222852760988793[58] = 0;
   out_8508222852760988793[59] = 0;
   out_8508222852760988793[60] = 0;
   out_8508222852760988793[61] = 0;
   out_8508222852760988793[62] = 1;
   out_8508222852760988793[63] = 0;
   out_8508222852760988793[64] = 0;
   out_8508222852760988793[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6205070406300130898) {
  H(in_vec, out_6205070406300130898);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5957469220389869935) {
  err_fun(nom_x, delta_x, out_5957469220389869935);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_299340672292740379) {
  inv_err_fun(nom_x, true_x, out_299340672292740379);
}
void live_H_mod_fun(double *state, double *out_1430967006122356882) {
  H_mod_fun(state, out_1430967006122356882);
}
void live_f_fun(double *state, double dt, double *out_2072141370447749105) {
  f_fun(state,  dt, out_2072141370447749105);
}
void live_F_fun(double *state, double dt, double *out_1319245241326118670) {
  F_fun(state,  dt, out_1319245241326118670);
}
void live_h_4(double *state, double *unused, double *out_3991502446721311034) {
  h_4(state, unused, out_3991502446721311034);
}
void live_H_4(double *state, double *unused, double *out_5055025497885333012) {
  H_4(state, unused, out_5055025497885333012);
}
void live_h_9(double *state, double *unused, double *out_8713402624539862666) {
  h_9(state, unused, out_8713402624539862666);
}
void live_H_9(double *state, double *unused, double *out_2232193437379114458) {
  H_9(state, unused, out_2232193437379114458);
}
void live_h_10(double *state, double *unused, double *out_1585530232908739700) {
  h_10(state, unused, out_1585530232908739700);
}
void live_H_10(double *state, double *unused, double *out_6253078100919733272) {
  H_10(state, unused, out_6253078100919733272);
}
void live_h_12(double *state, double *unused, double *out_585525772009571204) {
  h_12(state, unused, out_585525772009571204);
}
void live_H_12(double *state, double *unused, double *out_7010460198781485608) {
  H_12(state, unused, out_7010460198781485608);
}
void live_h_35(double *state, double *unused, double *out_7102552502524167431) {
  h_35(state, unused, out_7102552502524167431);
}
void live_H_35(double *state, double *unused, double *out_1688363440512725636) {
  H_35(state, unused, out_1688363440512725636);
}
void live_h_32(double *state, double *unused, double *out_8369551405886268210) {
  h_32(state, unused, out_8369551405886268210);
}
void live_H_32(double *state, double *unused, double *out_7287773853379807869) {
  H_32(state, unused, out_7287773853379807869);
}
void live_h_13(double *state, double *unused, double *out_2011964399576628187) {
  h_13(state, unused, out_2011964399576628187);
}
void live_H_13(double *state, double *unused, double *out_7475756452684609359) {
  H_13(state, unused, out_7475756452684609359);
}
void live_h_14(double *state, double *unused, double *out_8713402624539862666) {
  h_14(state, unused, out_8713402624539862666);
}
void live_H_14(double *state, double *unused, double *out_2232193437379114458) {
  H_14(state, unused, out_2232193437379114458);
}
void live_h_33(double *state, double *unused, double *out_8138782813319406848) {
  h_33(state, unused, out_8138782813319406848);
}
void live_H_33(double *state, double *unused, double *out_8508222852760988793) {
  H_33(state, unused, out_8508222852760988793);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
